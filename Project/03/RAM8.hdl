// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM8.hdl
/**
 * Memory of eight 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Compute negations of address bits
    Not(in=address[0], out=notAddr0);
    Not(in=address[1], out=notAddr1);
    Not(in=address[2], out=notAddr2);

    // Compute the control signals for each register
    // 计算某个地址是否被选择的过程中有很多信号可以复用
    And(a=notAddr0, b=notAddr1, out=addr00);
    And(a=address[0], b=notAddr1, out=addr01);
    And(a=notAddr0, b=address[1], out=addr10);
    And(a=address[0], b=address[1], out=addr11);

    And(a=addr00, b=notAddr2, out=addr000);
    And(a=addr01, b=notAddr2, out=addr001);
    And(a=addr10, b=notAddr2, out=addr010);
    And(a=addr11, b=notAddr2, out=addr011);
    And(a=addr00, b=address[2], out=addr100);
    And(a=addr01, b=address[2], out=addr101);
    And(a=addr10, b=address[2], out=addr110);
    And(a=addr11, b=address[2], out=addr111);

    // Combine with the load signal
    And(a=load, b=addr000, out=load0);
    And(a=load, b=addr001, out=load1);
    And(a=load, b=addr010, out=load2);
    And(a=load, b=addr011, out=load3);
    And(a=load, b=addr100, out=load4);
    And(a=load, b=addr101, out=load5);
    And(a=load, b=addr110, out=load6);
    And(a=load, b=addr111, out=load7);

    // Register instances
    // 使用 DMUX 操作 in 信号是不可行的
    // 因为可能寄存器会误载 0 信号
    Register(in=in, load=load0, out=out0);
    Register(in=in, load=load1, out=out1);
    Register(in=in, load=load2, out=out2);
    Register(in=in, load=load3, out=out3);
    Register(in=in, load=load4, out=out4);
    Register(in=in, load=load5, out=out5);
    Register(in=in, load=load6, out=out6);
    Register(in=in, load=load7, out=out7);

    // Mux to select the output
    Mux8Way16(a=out0, b=out1, c=out2, d=out3, e=out4, f=out5, g=out6, h=out7, sel=address, out=out);
}